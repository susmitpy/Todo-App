{"remainingRequest":"/Users/susmitvengurlekar/Todo-App/frontend/todo_app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/susmitvengurlekar/Todo-App/frontend/todo_app/src/components/RegLog.vue?vue&type=style&index=0&id=76e2d840&scoped=true&lang=css&","dependencies":[{"path":"/Users/susmitvengurlekar/Todo-App/frontend/todo_app/src/components/RegLog.vue","mtime":1604227496080},{"path":"/Users/susmitvengurlekar/Todo-App/frontend/todo_app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/susmitvengurlekar/Todo-App/frontend/todo_app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/susmitvengurlekar/Todo-App/frontend/todo_app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/susmitvengurlekar/Todo-App/frontend/todo_app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/susmitvengurlekar/Todo-App/frontend/todo_app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9ImNkbi5tYXRlcmlhbGRlc2lnbmljb25zLmNvbS81LjQuNTUvY3NzL21hdGVyaWFsZGVzaWduaWNvbnMubWluLmNzcyI+Cg=="},{"version":3,"sources":["RegLog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2JA","file":"RegLog.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n\n      <v-dialog v-model=\"dialog\" persistent max-width=\"600px\" min-width=\"360px\">\n            <div>\n                <v-tabs v-model=\"tab\" show-arrows background-color=\"deep-purple accent-4\" icons-and-text dark grow>\n                    <v-tabs-slider color=\"purple darken-4\"></v-tabs-slider>\n                    <v-tab v-for=\"(item, i) in tabs\" :key=\"item.id+i\">\n                        <v-icon large>{{ item.icon }}</v-icon>\n                        <div class=\"caption py-1\">{{ item.name }}</div>\n                    </v-tab>\n                    <v-tab-item>\n                        <v-card class=\"px-4\">\n                            <v-card-text>\n                                <v-form ref=\"loginForm\" v-model=\"valid\" lazy-validation>\n                                    <v-row>\n                                        <v-col cols=\"12\">\n                                            <v-text-field v-model=\"loginUsername\" :rules=\"loginUsernameRules\" label=\"Username\" required></v-text-field>\n                                        </v-col>\n                                        <v-col cols=\"12\">\n                                            <v-text-field v-model=\"loginPassword\" :append-icon=\"show1?'eye':'eye-off'\" :rules=\"[rules.required, rules.min]\" :type=\"show1 ? 'text' : 'password'\" name=\"input-10-1\" label=\"Password\" hint=\"At least 4 characters\" counter @click:append=\"show1 = !show1\"></v-text-field>\n                                        </v-col>\n                                        <v-col class=\"d-flex\" cols=\"12\" sm=\"6\" xsm=\"12\">\n                                          <v-label v-if=\"loginError\" >\n                                              Wrong User ID or Password\n                                            </v-label>\n                                        </v-col>\n                                     \n                                        <v-spacer></v-spacer>\n                                       \n                                        <v-col class=\"d-flex\" cols=\"12\" sm=\"3\" xsm=\"12\" align-end>\n                                            <v-btn x-large block :disabled=\"!valid\" color=\"success\" @click=\"validateLogin\"> Login </v-btn>\n                                        </v-col>\n                                    </v-row>\n                                </v-form>\n                            </v-card-text>\n                        </v-card>\n                    </v-tab-item>\n                    <v-tab-item>\n                        <v-card class=\"px-4\">\n                            <v-card-text>\n                                <v-form ref=\"registerForm\" v-model=\"valid\" lazy-validation>\n                                    <v-row>\n                                        <v-col cols=\"12\">\n                                            <v-text-field v-model=\"username\" :rules=\"usernameRules\" label=\"Username\" required></v-text-field>\n                                        </v-col>\n                                        <v-col cols=\"12\">\n                                            <v-text-field v-model=\"password\" :append-icon=\"show1 ? 'mdi-eye' : 'mdi-eye-off'\" :rules=\"[rules.required, rules.min]\" :type=\"show1 ? 'text' : 'password'\" name=\"input-10-1\" label=\"Password\" hint=\"At least 4 characters\" counter @click:append=\"show1 = !show1\"></v-text-field>\n                                        </v-col>\n                                        <v-col cols=\"12\">\n                                            <v-text-field block v-model=\"verify\" :append-icon=\"show1 ? 'mdi-eye' : 'mdi-eye-off'\" :rules=\"[rules.required, passwordMatch]\" :type=\"show1 ? 'text' : 'password'\" name=\"input-10-1\" label=\"Confirm Password\" counter @click:append=\"show1 = !show1\"></v-text-field>\n                                        </v-col>\n                                        <v-label v-if=\"usernameTaken\" >\n                                              Username already taken\n                                            </v-label>\n                                        <v-spacer></v-spacer>\n                                        \n                                        <v-col class=\"d-flex ml-auto\" cols=\"12\" sm=\"3\" xsm=\"12\">\n                                            <v-btn x-large block :disabled=\"!valid\" color=\"success\" @click=\"validateRegister\">Register</v-btn>\n                                        </v-col>\n                                    </v-row>\n                                </v-form>\n                            </v-card-text>\n                        </v-card>\n                    </v-tab-item>\n                </v-tabs>\n            </div>\n        </v-dialog>\n\n\n</template>\n\n<script>\nexport default {\n    name : \"RegLog\",\n    computed: {\n    passwordMatch() {\n      return () => this.password === this.verify || \"Password must match\";\n    }\n  },\n  methods: {\n    validateLogin() {\n      if (this.$refs.loginForm.validate()) {\n        console.log(\"Login\");\n        this.$store.commit(\"setUsername\",this.loginUsername)\n        this.$store.dispatch(\"login\",\n          {username : this.loginUsername,\n          password: this.loginPassword\n          }\n      ).then(() => {\n          this.$router.push(\"/home\")\n      }).catch(() => {\n        this.loginError=true\n        \n      })\n\n      }\n    },\n    validateRegister() {\n      if (this.$refs.registerForm.validate()) {\n        console.log(\"Register\");\n        this.$store.commit(\"setUsername\",this.username)\n        this.$store.dispatch(\"register\",\n          {username : this.username,\n          password: this.password\n          }\n        ).then(() => {\n        this.$router.push(\"/home\")\n        }).catch(() => {\n          this.usernameTaken = true\n        })\n\n      }\n    },\n    reset() {\n      this.$refs.form.reset();\n    },\n    resetValidation() {\n      this.$refs.form.resetValidation();\n    }\n  },\n  data: () => ({\n    dialog: true,\n    tab: 0,\n    tabs: [\n        {name:\"Login\", icon:\"mdi-account\",id:0},\n        {name:\"Register\", icon:\"mdi-account-outline\",id:1}\n    ],\n    valid: true,\n    username: \"\",\n    password: \"\",\n    verify: \"\",\n    loginPassword: \"\",\n    loginUsername: \"\",\n    loginUsernameRules: [\n      v => !!v || \"Required\",\n      v => (v && v.length >= 6) || \"Minimum 6 characters\"\n    ],\n    usernameRules: [\n      v => !!v || \"Required\",\n      v => (v && v.length >= 6) || \"Minimum 6 characters\"\n    ],\n\n    show1: false,\n    rules: {\n      required: value => !!value || \"Required.\",\n      min: v => (v && v.length >= 4) || \"Min 4 characters\"\n    },\n    loginError : false,\n    usernameTaken : false\n  })\n}\n</script>\n\n<style scoped>\n <link rel=\"stylesheet\" href=\"cdn.materialdesignicons.com/5.4.55/css/materialdesignicons.min.css\">\n</style>\n"]}]}