{"remainingRequest":"/Users/susmitvengurlekar/Todo-App/frontend/node_modules/babel-loader/lib/index.js!/Users/susmitvengurlekar/Todo-App/frontend/node_modules/vuetify/lib/components/VPagination/VPagination.js","dependencies":[{"path":"/Users/susmitvengurlekar/Todo-App/frontend/node_modules/vuetify/lib/components/VPagination/VPagination.js","mtime":499162500000},{"path":"/Users/susmitvengurlekar/Todo-App/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/susmitvengurlekar/Todo-App/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmciOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIi9Vc2Vycy9zdXNtaXR2ZW5ndXJsZWthci9Ub2RvLUFwcC9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvc3VzbWl0dmVuZ3VybGVrYXIvVG9kby1BcHAvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1ZQYWdpbmF0aW9uL1ZQYWdpbmF0aW9uLnNhc3MiOwppbXBvcnQgVkljb24gZnJvbSAnLi4vVkljb24nOyAvLyBEaXJlY3RpdmVzCgppbXBvcnQgUmVzaXplIGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvcmVzaXplJzsgLy8gTWl4aW5zCgppbXBvcnQgQ29sb3JhYmxlIGZyb20gJy4uLy4uL21peGlucy9jb2xvcmFibGUnOwppbXBvcnQgSW50ZXJzZWN0YWJsZSBmcm9tICcuLi8uLi9taXhpbnMvaW50ZXJzZWN0YWJsZSc7CmltcG9ydCBUaGVtZWFibGUgZnJvbSAnLi4vLi4vbWl4aW5zL3RoZW1lYWJsZSc7IC8vIFV0aWxpdGllcwoKaW1wb3J0IG1peGlucyBmcm9tICcuLi8uLi91dGlsL21peGlucyc7Ci8qIEB2dWUvY29tcG9uZW50ICovCgpleHBvcnQgZGVmYXVsdCBtaXhpbnMoQ29sb3JhYmxlLCBJbnRlcnNlY3RhYmxlKHsKICBvblZpc2libGU6IFsnaW5pdCddCn0pLCBUaGVtZWFibGUpLmV4dGVuZCh7CiAgbmFtZTogJ3YtcGFnaW5hdGlvbicsCiAgZGlyZWN0aXZlczogewogICAgUmVzaXplOiBSZXNpemUKICB9LAogIHByb3BzOiB7CiAgICBjaXJjbGU6IEJvb2xlYW4sCiAgICBkaXNhYmxlZDogQm9vbGVhbiwKICAgIGxlbmd0aDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDAsCiAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24gdmFsaWRhdG9yKHZhbCkgewogICAgICAgIHJldHVybiB2YWwgJSAxID09PSAwOwogICAgICB9CiAgICB9LAogICAgbmV4dEljb246IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJG5leHQnCiAgICB9LAogICAgcHJldkljb246IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJHByZXYnCiAgICB9LAogICAgdG90YWxWaXNpYmxlOiBbTnVtYmVyLCBTdHJpbmddLAogICAgdmFsdWU6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAwCiAgICB9LAogICAgcGFnZUFyaWFMYWJlbDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICckdnVldGlmeS5wYWdpbmF0aW9uLmFyaWFMYWJlbC5wYWdlJwogICAgfSwKICAgIGN1cnJlbnRQYWdlQXJpYUxhYmVsOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJyR2dWV0aWZ5LnBhZ2luYXRpb24uYXJpYUxhYmVsLmN1cnJlbnRQYWdlJwogICAgfSwKICAgIHByZXZpb3VzQXJpYUxhYmVsOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJyR2dWV0aWZ5LnBhZ2luYXRpb24uYXJpYUxhYmVsLnByZXZpb3VzJwogICAgfSwKICAgIG5leHRBcmlhTGFiZWw6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJHZ1ZXRpZnkucGFnaW5hdGlvbi5hcmlhTGFiZWwubmV4dCcKICAgIH0sCiAgICB3cmFwcGVyQXJpYUxhYmVsOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJyR2dWV0aWZ5LnBhZ2luYXRpb24uYXJpYUxhYmVsLndyYXBwZXInCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbWF4QnV0dG9uczogMCwKICAgICAgc2VsZWN0ZWQ6IG51bGwKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgY2xhc3NlczogZnVuY3Rpb24gY2xhc3NlcygpIHsKICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoewogICAgICAgICd2LXBhZ2luYXRpb24nOiB0cnVlLAogICAgICAgICd2LXBhZ2luYXRpb24tLWNpcmNsZSc6IHRoaXMuY2lyY2xlLAogICAgICAgICd2LXBhZ2luYXRpb24tLWRpc2FibGVkJzogdGhpcy5kaXNhYmxlZAogICAgICB9LCB0aGlzLnRoZW1lQ2xhc3Nlcyk7CiAgICB9LAogICAgaXRlbXM6IGZ1bmN0aW9uIGl0ZW1zKCkgewogICAgICB2YXIgdG90YWxWaXNpYmxlID0gcGFyc2VJbnQodGhpcy50b3RhbFZpc2libGUsIDEwKTsKICAgICAgdmFyIG1heExlbmd0aCA9IE1hdGgubWluKE1hdGgubWF4KDAsIHRvdGFsVmlzaWJsZSkgfHwgdGhpcy5sZW5ndGgsIE1hdGgubWF4KDAsIHRoaXMubWF4QnV0dG9ucykgfHwgdGhpcy5sZW5ndGgsIHRoaXMubGVuZ3RoKTsKCiAgICAgIGlmICh0aGlzLmxlbmd0aCA8PSBtYXhMZW5ndGgpIHsKICAgICAgICByZXR1cm4gdGhpcy5yYW5nZSgxLCB0aGlzLmxlbmd0aCk7CiAgICAgIH0KCiAgICAgIHZhciBldmVuID0gbWF4TGVuZ3RoICUgMiA9PT0gMCA/IDEgOiAwOwogICAgICB2YXIgbGVmdCA9IE1hdGguZmxvb3IobWF4TGVuZ3RoIC8gMik7CiAgICAgIHZhciByaWdodCA9IHRoaXMubGVuZ3RoIC0gbGVmdCArIDEgKyBldmVuOwoKICAgICAgaWYgKHRoaXMudmFsdWUgPiBsZWZ0ICYmIHRoaXMudmFsdWUgPCByaWdodCkgewogICAgICAgIHZhciBzdGFydCA9IHRoaXMudmFsdWUgLSBsZWZ0ICsgMjsKICAgICAgICB2YXIgZW5kID0gdGhpcy52YWx1ZSArIGxlZnQgLSAyIC0gZXZlbjsKICAgICAgICByZXR1cm4gWzEsICcuLi4nXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMucmFuZ2Uoc3RhcnQsIGVuZCkpLCBbJy4uLicsIHRoaXMubGVuZ3RoXSk7CiAgICAgIH0gZWxzZSBpZiAodGhpcy52YWx1ZSA9PT0gbGVmdCkgewogICAgICAgIHZhciBfZW5kID0gdGhpcy52YWx1ZSArIGxlZnQgLSAxIC0gZXZlbjsKCiAgICAgICAgcmV0dXJuIFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5yYW5nZSgxLCBfZW5kKSksIFsnLi4uJywgdGhpcy5sZW5ndGhdKTsKICAgICAgfSBlbHNlIGlmICh0aGlzLnZhbHVlID09PSByaWdodCkgewogICAgICAgIHZhciBfc3RhcnQgPSB0aGlzLnZhbHVlIC0gbGVmdCArIDE7CgogICAgICAgIHJldHVybiBbMSwgJy4uLiddLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5yYW5nZShfc3RhcnQsIHRoaXMubGVuZ3RoKSkpOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMucmFuZ2UoMSwgbGVmdCkpLCBbJy4uLiddLCBfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5yYW5nZShyaWdodCwgdGhpcy5sZW5ndGgpKSk7CiAgICAgIH0KICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICB2YWx1ZTogZnVuY3Rpb24gdmFsdWUoKSB7CiAgICAgIHRoaXMuaW5pdCgpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuaW5pdCgpOwogIH0sCiAgbWV0aG9kczogewogICAgaW5pdDogZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuc2VsZWN0ZWQgPSBudWxsOwogICAgICB0aGlzLiRuZXh0VGljayh0aGlzLm9uUmVzaXplKTsgLy8gVE9ETzogQ2hhbmdlIHRoaXMgKGY3NWRlZTNhLCBjYmRmN2NhYSkKCiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBfdGhpcy5zZWxlY3RlZCA9IF90aGlzLnZhbHVlOwogICAgICB9LCAxMDApOwogICAgfSwKICAgIG9uUmVzaXplOiBmdW5jdGlvbiBvblJlc2l6ZSgpIHsKICAgICAgdmFyIHdpZHRoID0gdGhpcy4kZWwgJiYgdGhpcy4kZWwucGFyZW50RWxlbWVudCA/IHRoaXMuJGVsLnBhcmVudEVsZW1lbnQuY2xpZW50V2lkdGggOiB3aW5kb3cuaW5uZXJXaWR0aDsKICAgICAgdGhpcy5tYXhCdXR0b25zID0gTWF0aC5mbG9vcigod2lkdGggLSA5NikgLyA0Mik7CiAgICB9LAogICAgbmV4dDogZnVuY3Rpb24gbmV4dChlKSB7CiAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB0aGlzLnZhbHVlICsgMSk7CiAgICAgIHRoaXMuJGVtaXQoJ25leHQnKTsKICAgIH0sCiAgICBwcmV2aW91czogZnVuY3Rpb24gcHJldmlvdXMoZSkgewogICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdGhpcy52YWx1ZSAtIDEpOwogICAgICB0aGlzLiRlbWl0KCdwcmV2aW91cycpOwogICAgfSwKICAgIHJhbmdlOiBmdW5jdGlvbiByYW5nZShmcm9tLCB0bykgewogICAgICB2YXIgcmFuZ2UgPSBbXTsKICAgICAgZnJvbSA9IGZyb20gPiAwID8gZnJvbSA6IDE7CgogICAgICBmb3IgKHZhciBpID0gZnJvbTsgaSA8PSB0bzsgaSsrKSB7CiAgICAgICAgcmFuZ2UucHVzaChpKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHJhbmdlOwogICAgfSwKICAgIGdlbkljb246IGZ1bmN0aW9uIGdlbkljb24oaCwgaWNvbiwgZGlzYWJsZWQsIGZuLCBsYWJlbCkgewogICAgICByZXR1cm4gaCgnbGknLCBbaCgnYnV0dG9uJywgewogICAgICAgIHN0YXRpY0NsYXNzOiAndi1wYWdpbmF0aW9uX19uYXZpZ2F0aW9uJywKICAgICAgICBjbGFzczogewogICAgICAgICAgJ3YtcGFnaW5hdGlvbl9fbmF2aWdhdGlvbi0tZGlzYWJsZWQnOiBkaXNhYmxlZAogICAgICAgIH0sCiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgIHR5cGU6ICdidXR0b24nLAogICAgICAgICAgJ2FyaWEtbGFiZWwnOiBsYWJlbAogICAgICAgIH0sCiAgICAgICAgb246IGRpc2FibGVkID8ge30gOiB7CiAgICAgICAgICBjbGljazogZm4KICAgICAgICB9CiAgICAgIH0sIFtoKFZJY29uLCBbaWNvbl0pXSldKTsKICAgIH0sCiAgICBnZW5JdGVtOiBmdW5jdGlvbiBnZW5JdGVtKGgsIGkpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgY29sb3IgPSBpID09PSB0aGlzLnZhbHVlICYmICh0aGlzLmNvbG9yIHx8ICdwcmltYXJ5Jyk7CiAgICAgIHZhciBpc0N1cnJlbnRQYWdlID0gaSA9PT0gdGhpcy52YWx1ZTsKICAgICAgdmFyIGFyaWFMYWJlbCA9IGlzQ3VycmVudFBhZ2UgPyB0aGlzLmN1cnJlbnRQYWdlQXJpYUxhYmVsIDogdGhpcy5wYWdlQXJpYUxhYmVsOwogICAgICByZXR1cm4gaCgnYnV0dG9uJywgdGhpcy5zZXRCYWNrZ3JvdW5kQ29sb3IoY29sb3IsIHsKICAgICAgICBzdGF0aWNDbGFzczogJ3YtcGFnaW5hdGlvbl9faXRlbScsCiAgICAgICAgY2xhc3M6IHsKICAgICAgICAgICd2LXBhZ2luYXRpb25fX2l0ZW0tLWFjdGl2ZSc6IGkgPT09IHRoaXMudmFsdWUKICAgICAgICB9LAogICAgICAgIGF0dHJzOiB7CiAgICAgICAgICB0eXBlOiAnYnV0dG9uJywKICAgICAgICAgICdhcmlhLWN1cnJlbnQnOiBpc0N1cnJlbnRQYWdlLAogICAgICAgICAgJ2FyaWEtbGFiZWwnOiB0aGlzLiR2dWV0aWZ5LmxhbmcudChhcmlhTGFiZWwsIGkpCiAgICAgICAgfSwKICAgICAgICBvbjogewogICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uIGNsaWNrKCkgewogICAgICAgICAgICByZXR1cm4gX3RoaXMyLiRlbWl0KCdpbnB1dCcsIGkpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSksIFtpLnRvU3RyaW5nKCldKTsKICAgIH0sCiAgICBnZW5JdGVtczogZnVuY3Rpb24gZ2VuSXRlbXMoaCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHJldHVybiB0aGlzLml0ZW1zLm1hcChmdW5jdGlvbiAoaSwgaW5kZXgpIHsKICAgICAgICByZXR1cm4gaCgnbGknLCB7CiAgICAgICAgICBrZXk6IGluZGV4CiAgICAgICAgfSwgW2lzTmFOKE51bWJlcihpKSkgPyBoKCdzcGFuJywgewogICAgICAgICAgY2xhc3M6ICd2LXBhZ2luYXRpb25fX21vcmUnCiAgICAgICAgfSwgW2kudG9TdHJpbmcoKV0pIDogX3RoaXMzLmdlbkl0ZW0oaCwgaSldKTsKICAgICAgfSk7CiAgICB9LAogICAgZ2VuTGlzdDogZnVuY3Rpb24gZ2VuTGlzdChoLCBjaGlsZHJlbikgewogICAgICByZXR1cm4gaCgndWwnLCB7CiAgICAgICAgZGlyZWN0aXZlczogW3sKICAgICAgICAgIG1vZGlmaWVyczogewogICAgICAgICAgICBxdWlldDogdHJ1ZQogICAgICAgICAgfSwKICAgICAgICAgIG5hbWU6ICdyZXNpemUnLAogICAgICAgICAgdmFsdWU6IHRoaXMub25SZXNpemUKICAgICAgICB9XSwKICAgICAgICBjbGFzczogdGhpcy5jbGFzc2VzCiAgICAgIH0sIGNoaWxkcmVuKTsKICAgIH0KICB9LAogIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHsKICAgIHZhciBjaGlsZHJlbiA9IFt0aGlzLmdlbkljb24oaCwgdGhpcy4kdnVldGlmeS5ydGwgPyB0aGlzLm5leHRJY29uIDogdGhpcy5wcmV2SWNvbiwgdGhpcy52YWx1ZSA8PSAxLCB0aGlzLnByZXZpb3VzLCB0aGlzLiR2dWV0aWZ5LmxhbmcudCh0aGlzLnByZXZpb3VzQXJpYUxhYmVsKSksIHRoaXMuZ2VuSXRlbXMoaCksIHRoaXMuZ2VuSWNvbihoLCB0aGlzLiR2dWV0aWZ5LnJ0bCA/IHRoaXMucHJldkljb24gOiB0aGlzLm5leHRJY29uLCB0aGlzLnZhbHVlID49IHRoaXMubGVuZ3RoLCB0aGlzLm5leHQsIHRoaXMuJHZ1ZXRpZnkubGFuZy50KHRoaXMubmV4dEFyaWFMYWJlbCkpXTsKICAgIHJldHVybiBoKCduYXYnLCB7CiAgICAgIGF0dHJzOiB7CiAgICAgICAgcm9sZTogJ25hdmlnYXRpb24nLAogICAgICAgICdhcmlhLWxhYmVsJzogdGhpcy4kdnVldGlmeS5sYW5nLnQodGhpcy53cmFwcGVyQXJpYUxhYmVsKQogICAgICB9CiAgICB9LCBbdGhpcy5nZW5MaXN0KGgsIGNoaWxkcmVuKV0pOwogIH0KfSk7"},null]}