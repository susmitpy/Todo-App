{"remainingRequest":"/Users/susmitvengurlekar/Todo-App/frontend/node_modules/babel-loader/lib/index.js!/Users/susmitvengurlekar/Todo-App/frontend/node_modules/vuetify/lib/mixins/activatable/index.js","dependencies":[{"path":"/Users/susmitvengurlekar/Todo-App/frontend/node_modules/vuetify/lib/mixins/activatable/index.js","mtime":1604464425365},{"path":"/Users/susmitvengurlekar/Todo-App/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1604464419111},{"path":"/Users/susmitvengurlekar/Todo-App/frontend/node_modules/babel-loader/lib/index.js","mtime":1604464418954}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}